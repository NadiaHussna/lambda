name: CICD
on:
   push:
    branches: 
     - main
     
   pull_request: 
    branches: 
     - main
     
   workflow_dispatch:
jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: AWS Test Configuration
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_S3_BUCKET_USER_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_S3_BUCKET_USER_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_S3_BUCKET_REGION }}
      - name: Build Zip File
        id: build_zip
        run: |
          # Set a unique identifier for the zip file
          ZIP_NAME="build-$(date +"%Y-%m-%d-%H-%M-%S").zip"
          echo "{build}={$ZIP_NAME}" >> $GITHUB_OUTPUT
          zip -r $ZIP_NAME .
      - name: 'Create Artifacts'
        id: 'create_artifacts'
        uses: actions/upload-artifact@v3
        with:
          name: latest-build
          path: ${{ github.workspace }}/${{ steps.build_zip.outputs.build }}
      - name: Upload Zip File to S3
        run: |
         ZIP_NAME="${{ steps.build_zip.outputs.build }}"
         aws s3 cp "${{ github.workspace }}/${ZIP_NAME}" "s3://bucketnad-111/${ZIP_NAME}"
         env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
          
     # aws s3 cp ${{ github.workspace }}/{{ steps.build_zip.outputs.build }} s3://${{ secrets.AWS_S3_BUCKET_NAME }}/${{ steps.build_zip.outputs.build }} --debug
     #${{ secrets.AWS_S3_BUCKET_NAME }}
     
  DeployLambdatoDev:
    # if: github.event_name == 'pull_request' && success()
    needs: [Build]
    runs-on: ubuntu-latest
    environment:
      name: LambdaDeployment
    steps:
        - name: 'Configure AWS Credentials'
          uses: aws-actions/configure-aws-credentials@v2
          with:
              aws-access-key-id: ${{ secrets.AWS_LAMBDA_USER_ACCESS_KEY_ID }}
              aws-secret-access-key: ${{ secrets.AWS_LAMBDA_USER_SECRET_ACCESS_KEY }}
              aws-region: ${{ secrets.AWS_LAMBDA_REGION }}
              
        - name: Deploy to Lambda Function
          run: |
              LATEST_ZIP=$(aws s3 ls s3://${{ secrets.AWS_S3_BUCKET_NAME }} --recursive --human-readable --summarize | grep 'build-' | awk '{ print $NF }' | sort -r | head -n 1)
              aws lambda update-function-code --function-name ${{ secrets.AWS_LAMBDA_FUNCTION_NAME }} --s3-bucket ${{ secrets.AWS_S3_BUCKET_NAME }} --s3-key "$LATEST_ZIP"
          env:
              AWS_DEFAULT_REGION: ${{ secrets.AWS_LAMBDA_REGION }}
  

