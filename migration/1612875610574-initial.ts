import { MigrationInterface, QueryRunner } from 'typeorm'

export class initial1612875610574 implements MigrationInterface {

  public async up(queryRunner: QueryRunner): Promise<void> {
    await queryRunner.query("CREATE TABLE `ClientAssessment` (`client_id` binary(16) NOT NULL, `MANDT` varchar(10) NULL, `risk_score` int NOT NULL, `hnw_status` varchar(20) NULL, `investment_horizon` varchar(45) NULL, `risk_tolerance` varchar(20) NULL, `fea_category` varchar(2) NULL, `funding_option` varchar(20) NULL, `timestamp` bigint NULL, INDEX `client_id` (`client_id`), INDEX `risk_score` (`risk_score`), UNIQUE INDEX `client_id_UNIQUE` (`client_id`), UNIQUE INDEX `REL_9e6d44751031215c43039ae2e2` (`client_id`), PRIMARY KEY (`client_id`)) ENGINE=InnoDB");
    await queryRunner.query("CREATE TABLE `FundTracker` (`tracker_id` bigint NOT NULL AUTO_INCREMENT, `MANDT` varchar(10) NOT NULL, `investment_id` binary(16) NULL, `transaction_ref` varchar(45) NULL, `order_no` varchar(45) NULL, `source` varchar(45) NULL, `user_id` binary(16) NULL, `status` varchar(100) NOT NULL, `remark` varchar(300) NULL, `timestamp` bigint NOT NULL, INDEX `FundTracker_FK_1` (`order_no`), INDEX `FundTracker_FK` (`investment_id`), PRIMARY KEY (`tracker_id`)) ENGINE=InnoDB");
    await queryRunner.query("CREATE TABLE `Investment` (`investment_id` binary(16) NOT NULL, `MANDT` varchar(10) NOT NULL, `uta_id` binary(16) NULL, `order_no` varchar(45) NULL, `account_type` varchar(100) NULL, `transaction_ref` varchar(45) NULL, `client_id` binary(16) NOT NULL, `client_idNum` varchar(20) NULL, `client_name` varchar(250) NULL, `transaction_type` varchar(20) NULL, `fund_type` varchar(45) NULL, `payment_id` binary(16) NULL, `payment_method` varchar(45) NOT NULL, `currency` varchar(5) NOT NULL, `accumulated_balance` decimal(13,4) NULL, `agent_id` binary(16) NULL, `agent_code` varchar(20) NULL, `agent_name` varchar(100) NULL, `last_updated` bigint NULL, `target_date` bigint NULL, `status_id` bigint NULL DEFAULT '1', `fund_id` int NULL, `status_remark` json NULL, `cut_off_time` varchar(20) NULL, `sales_charge` float(12) NULL, `is_scheduled` tinyint NULL DEFAULT '0', `scheduled_sales_charge` decimal(5,2) NULL, `scheduled_payment` decimal(13,4) NULL, `investment_amount` decimal(13,4) NULL, `fund_category` varchar(100) NULL, `branch_id` int NULL, `finance_exception` tinyint(1) NULL DEFAULT '0', `ops_exception` tinyint NULL DEFAULT '0', `submitted_on` bigint NULL, `process_day` varchar(15) NULL, `batch_time` varchar(10) NULL, `updated_by` varchar(50) NULL, `request_id` int NULL, `is_cancel` tinyint NULL DEFAULT '1', `can_proceed` tinyint NULL DEFAULT '0', `is_daily` tinyint NULL DEFAULT '0', `last_activity` bigint NULL, `cancelled_on` bigint NOT NULL, `timestamp` bigint NOT NULL, INDEX `Investment_FK_1` (`client_id`), INDEX `Investment_FK_2` (`order_no`), PRIMARY KEY (`investment_id`)) ENGINE=InnoDB");
    await queryRunner.query("CREATE TABLE `Payment` (`payment_id` bigint NOT NULL AUTO_INCREMENT, `MANDT` varchar(10) NULL, `agent_id` binary(16) NOT NULL, `client_id` binary(16) NOT NULL, `doc_id` binary(16) NULL, `fund_id` int NULL, `order_no` varchar(45) NOT NULL, `payment_method` varchar(45) NOT NULL, `currency` varchar(5) NULL, `amount` decimal(14,3) NULL, `kib_bank_name` varchar(100) NULL, `kib_bank_account_number` varchar(45) NULL, `bank_name` varchar(45) NULL, `check_number` varchar(45) NULL, `client_name` varchar(45) NULL, `client_trust_account_number` varchar(45) NULL, `epf_reference_no` varchar(45) NULL, `epf_account_number` varchar(45) NULL, `bank_account_name` varchar(100) NULL, `bank_account_number` varchar(45) NULL, `recurring_type` varchar(10) NULL, `recurring_bank` varchar(100) NULL, `frequency` varchar(45) NULL, `remark` varchar(45) NULL, `payment_on` bigint NULL, `status` varchar(10) NULL, `timestamp` bigint NOT NULL, INDEX `payment_agent_id_idx` (`agent_id`), INDEX `payment_doc_id_idx` (`doc_id`), INDEX `payment_order_id_idx` (`order_no`), PRIMARY KEY (`payment_id`)) ENGINE=InnoDB");
    await queryRunner.query("CREATE TABLE `Document` (`document_id` binary(16) NOT NULL, `MANDT` varchar(10) NULL, `client_id` binary(16) NOT NULL, `doc_type` varchar(255) NULL, `filename` text NULL, `file_type` varchar(45) NULL, `path` text NULL, `branch_name` varchar(45) NULL, `is_signed` tinyint(1) NULL DEFAULT '0', `deleted_on` bigint NULL, `timestamp` bigint NULL, INDEX `doct_id` (`document_id`), INDEX `doc_client_id` (`client_id`), PRIMARY KEY (`document_id`, `client_id`)) ENGINE=InnoDB");
    await queryRunner.query("CREATE TABLE `CaseTracker` (`tracker_id` bigint NOT NULL AUTO_INCREMENT, `MANDT` varchar(10) NOT NULL, `case_id` bigint NOT NULL, `source` varchar(45) NOT NULL, `user_id` binary(16) NULL, `status` varchar(100) NOT NULL, `remark` varchar(300) NULL, `timestamp` bigint NOT NULL, INDEX `CaseTracker_FK_1` (`user_id`), INDEX `CaseTracker_FK` (`case_id`), PRIMARY KEY (`tracker_id`)) ENGINE=InnoDB");
    await queryRunner.query("CREATE TABLE `UserGroupRole` (`user_group_role_id` int NOT NULL AUTO_INCREMENT, `MANDT` varchar(30) NOT NULL DEFAULT 'KIB', `group_ids` json NULL, `permission` json NULL, `timestamp` bigint NOT NULL, PRIMARY KEY (`user_group_role_id`)) ENGINE=InnoDB");
    await queryRunner.query("CREATE TABLE `OfficeUser` (`user_id` binary(16) NOT NULL, `MANDT` varchar(10) NOT NULL DEFAULT 'KIB', `user_group_role_id` int NULL, `name` varchar(100) NULL, `email` varchar(100) NULL, `username` varchar(50) NULL, `mobile_no` varchar(15) NULL, `description` varchar(255) NULL, `arn_endpoint` text NULL, `sso_id` varchar(255) NULL, `last_login` bigint NULL, `is_active` tinyint(1) NULL DEFAULT '0', `status` varchar(255) NULL DEFAULT 'PENDING', `branch_id` int NULL, `department_id` int NULL, `source` varchar(20) NULL, `remarks` varchar(20) NULL, `author` binary(16) NULL, `request_approval_id` int NULL, `password_update_date` bigint NULL, `last_updated` bigint NULL, `timestamp` bigint NOT NULL, INDEX `User_FK` (`user_group_role_id`), PRIMARY KEY (`user_id`)) ENGINE=InnoDB");
    await queryRunner.query("CREATE TABLE `UTAccount` (`uta_id` binary(16) NOT NULL, `MANDT` varchar(10) NULL, `agent_id` binary(16) NULL, `client_id` binary(16) NOT NULL, `account_no` varchar(20) NULL, `portfolio_type` varchar(20) NULL, `operating_mode` varchar(20) NULL, `fa_code` varchar(20) NULL, `distribution_type` varchar(20) NULL, `status` varchar(20) NULL, `joint_id` binary(16) NULL, `timestamp` bigint NULL, INDEX `UTAccount_FK_1` (`joint_id`), INDEX `uta_client_id_idx` (`client_id`), INDEX `account_no` (`account_no`), PRIMARY KEY (`uta_id`)) ENGINE=InnoDB");
    await queryRunner.query("CREATE TABLE `EddCase` (`case_id` bigint NOT NULL AUTO_INCREMENT, `MANDT` varchar(10) NOT NULL, `case_no` varchar(15) NOT NULL, `edd_id` bigint NOT NULL, `amla_id` binary(16) NOT NULL, `edd_count` bigint NULL DEFAULT '1', `uta_id` binary(16) NULL, `account_no` varchar(15) NULL, `account_type` varchar(15) NULL, `client_id` binary(16) NOT NULL, `client_idNum` varchar(20) NULL, `client_name` varchar(100) NULL, `agent_id` binary(16) NOT NULL, `agent_name` varchar(100) NULL, `agent_code` varchar(20) NULL, `bdm_name` varchar(100) NULL, `bdm_code` varchar(20) NULL, `status` varchar(20) NULL DEFAULT 'Pending', `status_type` varchar(10) NULL DEFAULT 'New', `status_remark` varchar(100) NULL, `edd_reason` varchar(100) NULL, `edd_trigger` varchar(100) NULL, `target_close_date` bigint NOT NULL, `timestamp` bigint NOT NULL, `last_updated` bigint NULL, INDEX `EddCase_FK_5` (`uta_id`), INDEX `EddCase_FK_4` (`edd_id`), INDEX `EddCase_FK_2` (`agent_id`), INDEX `EddCase_FK_1` (`client_id`), INDEX `EddCase_FK` (`amla_id`), UNIQUE INDEX `EddCase_UN` (`case_no`), UNIQUE INDEX `IDX_c54342daaa9ee8142bd5a08ad0` (`case_no`), PRIMARY KEY (`case_id`)) ENGINE=InnoDB");
    await queryRunner.query("CREATE TABLE `Client` (`client_id` binary(16) NOT NULL, `MANDT` varchar(10) NULL, `salutation` varchar(45) NULL, `name` varchar(45) NULL, `gender` varchar(45) NULL, `email` varchar(45) NULL, `dob` varchar(45) NULL, `id_number` varchar(45) NULL, `mothers_maiden_name` varchar(45) NULL, `marital_status` varchar(45) NULL, `nationality` varchar(50) NULL, `education_level` varchar(45) NULL, `epf_type` varchar(45) NULL, `epf_number` varchar(45) NULL, `race` varchar(45) NULL, `bumiputera` varchar(45) NULL, `place_of_birth` varchar(45) NULL, `country_of_birth` varchar(45) NULL, `id_type` varchar(45) NULL, `status` int NULL, `is_cancel` tinyint(1) NOT NULL DEFAULT '1', `ref_id` binary(16) NULL, `principal` tinyint(1) NULL DEFAULT '0', `account_type` varchar(20) NULL, `timestamp` bigint NULL, `last_updated` bigint NULL, `last_activity` bigint NULL, INDEX `joint_client_fk_idx` (`ref_id`), INDEX `client_id_fk` (`client_id`), PRIMARY KEY (`client_id`)) ENGINE=InnoDB");
    await queryRunner.query("CREATE TABLE `Edd` (`MANDT` varchar(10) NOT NULL, `edd_id` bigint NOT NULL AUTO_INCREMENT, `uta_id` binary(16) NULL, `account_no` varchar(15) NULL, `account_type` varchar(15) NULL, `account_created` bigint NULL, `client_id` binary(16) NOT NULL, `client_name` varchar(100) NULL, `client_idNum` varchar(20) NULL, `agent_id` binary(16) NULL, `agent_name` varchar(100) NULL, `agent_code` varchar(20) NULL, `agent_origin` varchar(10) NULL, `last_case` varchar(15) NULL, `last_status` varchar(10) NULL, `last_closed` bigint NULL, `timestamp` bigint NOT NULL, INDEX `Edd_FK_3` (`uta_id`), INDEX `Edd_FK_2` (`agent_id`), INDEX `Edd_FK` (`client_id`), PRIMARY KEY (`edd_id`)) ENGINE=InnoDB");
    await queryRunner.query("CREATE TABLE `Agent` (`agent_id` binary(16) NOT NULL, `MANDT` varchar(30) NULL, `agent_name` varchar(100) NULL, `agent_code` varchar(50) NULL, `status` varchar(20) NULL, `license_code` varchar(10) NULL, `license_no` varchar(20) NULL, `nric` varchar(16) NOT NULL, `branch` varchar(30) NULL, `toms_branch` varchar(30) NULL, `email` varchar(50) NOT NULL, `region` varchar(100) NULL, `origin` varchar(20) NULL, `mobile_no` varchar(16) NULL, `bdm_name` varchar(100) NULL, `bdm_code` varchar(100) NULL, `bdm_email` varchar(100) NULL, `rank` varchar(50) NULL, `channel` varchar(50) NULL, `toms_channel` varchar(50) NULL, `omni_enabled` tinyint(1) NULL DEFAULT '0', `is_both` tinyint(1) NULL DEFAULT '0', `is_lock` tinyint(1) NULL DEFAULT '0', `upline_name` varchar(100) NULL, `upline_code` varchar(100) NULL, `upline_email` varchar(100) NULL, `fa_code` varchar(20) NULL, `portfolio_type` varchar(20) NULL, `address` varchar(250) NULL, `addr_town` varchar(50) NULL, `password_update_date` bigint NULL, `password` text NULL, `arn_endpoint` text NULL, `agency` varchar(50) NULL, `is_first_time` tinyint(1) NULL DEFAULT '1', `last_updated` bigint NULL, `timestamp` bigint NULL, UNIQUE INDEX `Email_UN` (`email`), UNIQUE INDEX `agent_id_UNIQUE` (`agent_id`), UNIQUE INDEX `fa_code_UNIQUE` (`fa_code`), UNIQUE INDEX `IDX_e51bc46ab47149414899490185` (`email`), UNIQUE INDEX `IDX_e99020b75fda2b602cfb212102` (`fa_code`), PRIMARY KEY (`agent_id`)) ENGINE=InnoDB");
    await queryRunner.query("CREATE TABLE `AuditLog` (`audit_log_id` int NOT NULL AUTO_INCREMENT, `user_id` binary(16) NOT NULL, `operation` varchar(100) NULL, `event` text NULL, `source` varchar(55) NULL, `status` varchar(30) NULL, `action` varchar(100) NULL, `file_size` varchar(100) NULL, `file_path` text NULL, `request_id` int NULL, `timestamp` bigint NOT NULL, PRIMARY KEY (`audit_log_id`)) ENGINE=InnoDB");
    await queryRunner.query("CREATE TABLE `Branch` (`branch_id` int NOT NULL AUTO_INCREMENT, `MANDT` varchar(10) NULL, `name` varchar(100) NULL, `state` varchar(100) NULL, `code` varchar(100) NULL, `timestamp` bigint NULL, PRIMARY KEY (`branch_id`)) ENGINE=InnoDB");
    await queryRunner.query("CREATE TABLE `Channel` (`id` int NOT NULL AUTO_INCREMENT, `channel_code` varchar(20) NULL, `channel_name` varchar(50) NULL, `timestamp` bigint NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB");
    await queryRunner.query("CREATE TABLE `ChargeFee` (`charge_fee_id` int NOT NULL AUTO_INCREMENT, `exit_epf_value` varchar(100) NULL, `exit_epf_percentage` varchar(100) NULL, `exit_non_epf_value` varchar(100) NULL, `exit_non_epf_percentage` varchar(100) NULL, `min_sales_fee_epf` varchar(100) NULL, `max_sales_fee_epf` varchar(100) NULL, `min_sales_fee_non_epf` varchar(100) NULL, `max_sales_fee_non_epf` varchar(100) NULL, `is_effective_set` tinyint(1) NULL DEFAULT '0', `effective_list_id` int NULL, `timestamp` bigint NOT NULL, PRIMARY KEY (`charge_fee_id`)) ENGINE=InnoDB");
    await queryRunner.query("CREATE TABLE `CollectionBank` (`collection_bank_id` int NOT NULL AUTO_INCREMENT, `channel_code` varchar(20) NULL, `channel_name` varchar(50) NULL, `timestamp` bigint NOT NULL, PRIMARY KEY (`collection_bank_id`)) ENGINE=InnoDB");
    await queryRunner.query("CREATE TABLE `CoolOff` (`id` int NOT NULL AUTO_INCREMENT, `message` text NOT NULL, `is_active` tinyint(1) NULL DEFAULT '0', `timestamp` bigint NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB");
    await queryRunner.query("CREATE TABLE `DdaFpx` (`id` int NOT NULL AUTO_INCREMENT, `product_type` varchar(20) NOT NULL, `dda` decimal(20,2) NULL, `fpx` decimal(20,2) NULL, `is_effective_set` tinyint(1) NULL DEFAULT '0', `effective_list_id` int NULL, `timestamp` bigint NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB");
    await queryRunner.query("CREATE TABLE `DefaultUnit` (`MANDT` varchar(10) NOT NULL, `default_id` bigint NOT NULL AUTO_INCREMENT, `name` varchar(50) NOT NULL, `value` varchar(45) NOT NULL, `unit` varchar(10) NOT NULL, `timestamp` bigint NOT NULL, PRIMARY KEY (`default_id`)) ENGINE=InnoDB");
    await queryRunner.query("CREATE TABLE `Department` (`dept_id` int NOT NULL AUTO_INCREMENT, `dept_code` varchar(10) NOT NULL, `name` varchar(30) NOT NULL, `description` varchar(100) NOT NULL, `timestamp` bigint NOT NULL, PRIMARY KEY (`dept_id`)) ENGINE=InnoDB");
    await queryRunner.query("CREATE TABLE `DistributionHistory` (`distribution_history_id` bigint UNSIGNED NOT NULL AUTO_INCREMENT, `closing_date` varchar(20) NULL, `gross_distribution` decimal(20,4) NULL, `net_distribution` decimal(20,4) NULL, `unit_split` varchar(20) NULL, `fund_id` int NULL, `timestamp` bigint NOT NULL, PRIMARY KEY (`distribution_history_id`)) ENGINE=InnoDB");
    await queryRunner.query("CREATE TABLE `DocumentQueue` (`id` int NOT NULL AUTO_INCREMENT, `MANDT` varchar(45) NULL DEFAULT 'KIB', `order_no` varchar(45) NULL, `hardcopy_queue` json NOT NULL, `softcopy_queue` json NOT NULL, `timestamp` bigint NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB");
    await queryRunner.query("CREATE TABLE `DocumentUpload` (`document_upload_id` int NOT NULL AUTO_INCREMENT, `fund_document_id` int NULL, `fund_id` int NULL, `path` text NOT NULL, `file_size` varchar(50) NOT NULL, `file_name` varchar(50) NOT NULL, `document_type` varchar(50) NOT NULL, `is_latest` tinyint(1) NULL DEFAULT '1', `last_update` bigint NULL, `timestamp` bigint NOT NULL, PRIMARY KEY (`document_upload_id`)) ENGINE=InnoDB");
    await queryRunner.query("CREATE TABLE `EddMaintainable` (`reason_id` bigint NOT NULL AUTO_INCREMENT, `MANDT` varchar(10) NOT NULL, `action_type` varchar(100) NOT NULL, `category` varchar(100) NOT NULL, `description` varchar(255) NOT NULL, `type` varchar(100) NOT NULL, `sub_category` varchar(100) NOT NULL, `timestamp` bigint NOT NULL, PRIMARY KEY (`reason_id`)) ENGINE=InnoDB");
    await queryRunner.query("CREATE TABLE `Question` (`question_id` bigint NOT NULL AUTO_INCREMENT, `MANDT` varchar(10) NOT NULL, `question` text NULL, `instructions` text NULL, `enabled` tinyint(1) NULL DEFAULT '1', `timestamp` bigint NOT NULL, `multi_selection` tinyint(1) NULL DEFAULT '0', PRIMARY KEY (`question_id`)) ENGINE=InnoDB");
    await queryRunner.query("CREATE TABLE `ModuleQuestion` (`MANDT` varchar(10) NOT NULL, `module_id` bigint NOT NULL, `question_id` bigint NOT NULL, INDEX `ModuleQuestion_FK` (`question_id`), PRIMARY KEY (`module_id`, `question_id`)) ENGINE=InnoDB");
    await queryRunner.query("CREATE TABLE `EddReason` (`reason_id` bigint NOT NULL AUTO_INCREMENT, `MANDT` varchar(10) NOT NULL, `category` varchar(100) NOT NULL, `sub_category` varchar(100) NOT NULL, `timestamp` bigint NOT NULL, PRIMARY KEY (`reason_id`)) ENGINE=InnoDB");
    await queryRunner.query("CREATE TABLE `ModuleReason` (`MANDT` varchar(10) NOT NULL, `module_id` bigint NOT NULL, `reason_id` bigint NOT NULL, INDEX `ModuleReason_FK` (`reason_id`), PRIMARY KEY (`module_id`, `reason_id`)) ENGINE=InnoDB");
    await queryRunner.query("CREATE TABLE `EddModule` (`module_id` bigint NOT NULL AUTO_INCREMENT, `MANDT` varchar(10) NOT NULL, `enabled` tinyint(1) NULL DEFAULT '1', `timestamp` bigint NOT NULL, PRIMARY KEY (`module_id`)) ENGINE=InnoDB");
    await queryRunner.query("CREATE TABLE `EffectiveList` (`effective_list_id` int NOT NULL AUTO_INCREMENT, `tx_type` varchar(30) NOT NULL, `redemption_switch_charge_id` int NULL, `switch_transfer_id` int NULL, `dda_fpx_list_id` int NULL, `predecessor` int NULL, `start_date` bigint NOT NULL, `end_date` bigint NOT NULL, `user_id` binary(16) NOT NULL, `timestamp` bigint NOT NULL, PRIMARY KEY (`effective_list_id`)) ENGINE=InnoDB");
    await queryRunner.query("CREATE TABLE `EmailBounce` (`bounce_id` int NOT NULL AUTO_INCREMENT, `bounce_email` varchar(255) NOT NULL, `timestamp` bigint NOT NULL, PRIMARY KEY (`bounce_id`)) ENGINE=InnoDB");
    await queryRunner.query("CREATE TABLE `FpxBank` (`id` int NOT NULL AUTO_INCREMENT, `bank_name` varchar(150) NOT NULL, `bank_abbr` varchar(10) NOT NULL, `bank_account_number` varchar(15) NULL, `timestamp` bigint NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB");
    await queryRunner.query("CREATE TABLE `FundAmp` (`fund_amp_id` int NOT NULL AUTO_INCREMENT, `fund_id` int NOT NULL, `rate_changes` decimal(20,20) NULL, `closing_date` bigint NULL, `last_update` bigint NULL, `timestamp` bigint NOT NULL, PRIMARY KEY (`fund_amp_id`)) ENGINE=InnoDB");
    await queryRunner.query("CREATE TABLE `FundDistribution` (`fund_distribution_id` int NOT NULL AUTO_INCREMENT, `fund_id` int NOT NULL, `fund_document_id` int NULL, `gross_distribution` decimal(20,4) NULL, `net_distribution` decimal(20,4) NULL, `unit_split` varchar(20) NULL, `last_update` bigint NULL, `closing_date` bigint NULL, `timestamp` bigint NOT NULL, PRIMARY KEY (`fund_distribution_id`)) ENGINE=InnoDB");
    await queryRunner.query("CREATE TABLE `FundDocument` (`fund_document_id` int NOT NULL AUTO_INCREMENT, `fund_id` int NOT NULL, `file_name` varchar(50) NOT NULL, `file_type` varchar(20) NULL, `path` text NOT NULL, `upload_type` varchar(20) NOT NULL, `status` varchar(20) NULL, `last_update` bigint NULL, `remark` varchar(45) NULL, `uploaded_on` bigint NULL, `total_documents` int NULL, `bulk_name` varchar(50) NULL, `file_size` int NULL, `request_id` int NULL, `timestamp` bigint NOT NULL, PRIMARY KEY (`fund_document_id`)) ENGINE=InnoDB");
    await queryRunner.query("CREATE TABLE `FundHoliday` (`fund_holiday_id` int NOT NULL AUTO_INCREMENT, `fund_id` int NOT NULL, `holiday_date` bigint NOT NULL, `timestamp` bigint NOT NULL, PRIMARY KEY (`fund_holiday_id`)) ENGINE=InnoDB");
    await queryRunner.query("CREATE TABLE `FundNav` (`fund_nav_id` int NOT NULL AUTO_INCREMENT, `fund_id` int NOT NULL, `fund_document_id` int NULL, `latest_nav_per_unit` decimal(20,4) NULL, `latest_nav_date` bigint NULL, `previous_nav_per_unit` decimal(20,4) NULL, `previous_nav_date` bigint NULL, `timestamp` bigint NOT NULL, PRIMARY KEY (`fund_nav_id`)) ENGINE=InnoDB");
    await queryRunner.query("CREATE TABLE `FundSplit` (`fund_split_id` int NOT NULL AUTO_INCREMENT, `fund_id` int NOT NULL, `fund_document_id` int NULL, `gross_unit_split` varchar(20) NULL, `net_unit_split` varchar(20) NULL, `unit_split` varchar(20) NULL, `closing_date` bigint NULL, `last_update` bigint NULL, `timestamp` bigint NOT NULL, PRIMARY KEY (`fund_split_id`)) ENGINE=InnoDB");
    await queryRunner.query("CREATE TABLE `GroupRoleIdList` (`id` int NOT NULL AUTO_INCREMENT, `MANDT` varchar(30) NOT NULL DEFAULT 'KIB', `user_group_id` int NULL, `user_role_id` int NULL, `timestamp` bigint NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB");
    await queryRunner.query("CREATE TABLE `HardCopyQueue` (`id` int NOT NULL AUTO_INCREMENT, `MANDT` varchar(30) NOT NULL DEFAULT 'KIB', `order_no` varchar(255) NULL, `doc_queue` json NULL, `timestamp` bigint NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB");
    await queryRunner.query("CREATE TABLE `Holiday` (`id` int NOT NULL AUTO_INCREMENT, `holiday_date` bigint NOT NULL, `timestamp` bigint NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB");
    await queryRunner.query("CREATE TABLE `KibBank` (`id` int NOT NULL AUTO_INCREMENT, `collection_bank_id` int NOT NULL, `bank_account_name` varchar(50) NOT NULL, `bank_account_number` varchar(15) NOT NULL, `currency` varchar(5) NOT NULL, `swift_code` varchar(30) NOT NULL, `timestamp` bigint NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB");
    await queryRunner.query("CREATE TABLE `Maintainable` (`MANDT` varchar(10) NOT NULL, `type_id` bigint NOT NULL AUTO_INCREMENT, `list_name` varchar(100) NOT NULL, `category` varchar(100) NOT NULL, `description` varchar(255) NULL, `timestamp` bigint NOT NULL, `type` varchar(100) NULL, `sub_category` varchar(100) NULL, PRIMARY KEY (`type_id`)) ENGINE=InnoDB");
    await queryRunner.query("CREATE TABLE `NatureOfBusiness` (`id` int NOT NULL AUTO_INCREMENT, `en` varchar(100) NOT NULL, `bm` varchar(100) NOT NULL, `timestamp` bigint NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB");
    await queryRunner.query("CREATE TABLE `NavHistory` (`nav_history_id` bigint UNSIGNED NOT NULL AUTO_INCREMENT, `closing_day` bigint NULL, `fund_id` int NOT NULL, `nav_per_unit` decimal(20,4) NULL, `latest_nav_per_unit` decimal(20,4) NULL, `latest_nav_date` bigint NULL, `previous_nav_per_unit` decimal(20,4) NULL, `previous_nav_date` bigint NULL, `timestamp` bigint NOT NULL, PRIMARY KEY (`nav_history_id`)) ENGINE=InnoDB");
    await queryRunner.query("CREATE TABLE `Nominee` (`nominee_id` int NOT NULL AUTO_INCREMENT, `transaction_id` binary(16) NOT NULL, `name` varchar(50) NOT NULL, `id_number` varchar(15) NOT NULL, `timestamp` bigint NOT NULL, PRIMARY KEY (`nominee_id`)) ENGINE=InnoDB");
    await queryRunner.query("CREATE TABLE `NomineeBank` (`nominee_bank_id` int NOT NULL AUTO_INCREMENT, `nominee_id` binary(16) NOT NULL, `bank_name` varchar(50) NOT NULL, `bank_account_number` varchar(15) NOT NULL, `location` varchar(50) NULL, `swift_code` varchar(30) NULL, `timestamp` bigint NOT NULL, PRIMARY KEY (`nominee_bank_id`)) ENGINE=InnoDB");
    await queryRunner.query("CREATE TABLE `Notification` (`notification_id` bigint NOT NULL AUTO_INCREMENT, `user_id` binary(16) NOT NULL, `title` varchar(100) NULL, `message` text NOT NULL, `sender` json NOT NULL, `search` json NOT NULL, `is_read` tinyint(1) NOT NULL DEFAULT '0', `new_message` tinyint(1) NOT NULL DEFAULT '1', `updated_at` bigint NULL, `timestamp` bigint NOT NULL, PRIMARY KEY (`notification_id`)) ENGINE=InnoDB");
    await queryRunner.query("CREATE TABLE `Occupation` (`id` int NOT NULL AUTO_INCREMENT, `en` varchar(100) NOT NULL, `bm` varchar(100) NOT NULL, `is_ppa` tinyint(1) NULL DEFAULT '0', `timestamp` bigint NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB");
    await queryRunner.query("CREATE TABLE `Options` (`option_id` bigint NOT NULL AUTO_INCREMENT, `MANDT` varchar(10) NOT NULL, `question_id` bigint NOT NULL, `options` text NULL, INDEX `Options_FK` (`question_id`), PRIMARY KEY (`option_id`)) ENGINE=InnoDB");
    await queryRunner.query("CREATE TABLE `PreGeneral` (`id` int NOT NULL AUTO_INCREMENT, `message` text NOT NULL, `is_active` tinyint(1) NULL DEFAULT '0', `timestamp` bigint NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB");
    await queryRunner.query("CREATE TABLE `PurgeRetention` (`id` int NOT NULL AUTO_INCREMENT, `status` varchar(20) NOT NULL, `level` varchar(20) NOT NULL, `is_purge` tinyint(1) NULL DEFAULT '0', `is_retention` tinyint(1) NULL DEFAULT '1', `duration` int NOT NULL DEFAULT '7', `timestamp` bigint NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB");
    await queryRunner.query("CREATE TABLE `Recommendation` (`fund_id` int NOT NULL AUTO_INCREMENT, `MANDT` varchar(30) NULL, `fund_code` varchar(20) NULL, `toms_abbr` varchar(20) NULL, `fund_abbr` varchar(20) NULL, `fund_name` varchar(100) NULL, `fund_type` varchar(45) NULL, `fund_category` varchar(50) NULL, `fund_alternate_category` varchar(100) NULL, `fund_group` varchar(50) NULL, `fund_status` varchar(70) NULL, `switch_group` varchar(15) NULL, `fund_class` varchar(20) NULL, `risk_category` varchar(15) NULL, `is_epf` tinyint(1) NULL DEFAULT '0', `epf_status` varchar(30) NULL, `is_syariah` tinyint(1) NULL DEFAULT '0', `is_conventional` tinyint(1) NULL DEFAULT '0', `fund_currency` varchar(20) NULL, `issuing_house` varchar(100) NULL, `performance` varchar(10) NULL, `master_cut_off` varchar(20) NULL, `cut_off` json NULL, `batch_cut_off` json NULL, `is_amp` tinyint(1) NULL DEFAULT '0', `is_prs_default` tinyint(1) NULL DEFAULT '0', `age_group` varchar(60) NULL, `is_multi_currency` tinyint(1) NULL, `last_updated` bigint NULL, `timestamp` bigint NOT NULL, UNIQUE INDEX `fund_id_UNIQUE` (`fund_id`), PRIMARY KEY (`fund_id`)) ENGINE=InnoDB");
    await queryRunner.query("CREATE TABLE `RedemptionFee` (`redemption_fee_id` int NOT NULL AUTO_INCREMENT, `fund_id` int NOT NULL, `fee_type` varchar(20) NULL, `message` text NULL, `redemption_settlement_day` varchar(20) NULL, `charge_fee_id` int NOT NULL, `is_effective_set` tinyint(1) NULL DEFAULT '0', `effective_list_id` int NULL, `timestamp` bigint NOT NULL, PRIMARY KEY (`redemption_fee_id`)) ENGINE=InnoDB");
    await queryRunner.query("CREATE TABLE `RedemptionSwitchCharge` (`redemption_switch_charge_id` int NOT NULL AUTO_INCREMENT, `fee_type` varchar(20) NOT NULL, `exit_epf_value` varchar(20) NULL, `exit_epf_percentage` varchar(20) NULL, `exit_non_epf_value` varchar(20) NULL, `exit_non_epf_percentage` varchar(20) NULL, `min_sales_fee_epf` varchar(20) NULL, `max_sales_fee_epf` varchar(20) NULL, `min_sales_fee_non_epf` varchar(20) NULL, `max_sales_fee_non_epf` varchar(20) NULL, `message` text NULL, `redemption_settlement_day` varchar(20) NULL, `switch_settlement_day` varchar(20) NULL, `cash_settlement_day` varchar(20) NULL, `local_settlement_day` varchar(20) NULL, `global_settlement_day` varchar(20) NULL, `amp_kib_settlement_day` varchar(20) NULL, `kgmaf_kib_settlement_day` varchar(20) NULL, `timestamp` bigint NOT NULL, PRIMARY KEY (`redemption_switch_charge_id`)) ENGINE=InnoDB");
    await queryRunner.query("CREATE TABLE `RiskExpiration` (`id` int NOT NULL AUTO_INCREMENT, `duration` int NOT NULL DEFAULT '0', `unit` varchar(10) NULL, `timestamp` bigint NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB");
    await queryRunner.query("CREATE TABLE `Salutation` (`id` int NOT NULL AUTO_INCREMENT, `description` varchar(50) NOT NULL, `timestamp` bigint NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB");
    await queryRunner.query("CREATE TABLE `SwitchCheck` (`switch_check_id` int NOT NULL AUTO_INCREMENT, `fund_id` int NOT NULL, `min_new_sales_fee_epf` decimal(20,2) NULL, `max_new_sales_fee_epf` decimal(20,2) NULL, `min_new_sales_fee_non_epf` decimal(20,2) NULL, `max_new_sales_fee_non_epf` decimal(20,2) NULL, `min_topup_epf` decimal(20,2) NULL, `max_topup_epf` decimal(20,2) NULL, `min_topup_non_epf` decimal(20,2) NULL, `max_topup_non_epf` decimal(20,2) NULL, `is_amp` tinyint(1) NULL DEFAULT '0', `is_effective_set` tinyint(1) NULL DEFAULT '0', `effective_list_id` int NULL, `timestamp` bigint NOT NULL, PRIMARY KEY (`switch_check_id`)) ENGINE=InnoDB");
    await queryRunner.query("CREATE TABLE `SwitchMultiple` (`switch_multiple_id` int NOT NULL AUTO_INCREMENT, `fund_id` int NOT NULL, `from_single` tinyint(1) NULL DEFAULT '0', `from_multiple` tinyint(1) NULL DEFAULT '0', `to_single` tinyint(1) NULL DEFAULT '0', `to_multiple` tinyint(1) NULL DEFAULT '0', `ut` tinyint(1) NULL DEFAULT '0', `prs` tinyint(1) NULL DEFAULT '0', `amp` tinyint(1) NULL DEFAULT '0', `amp_to_ut` tinyint(1) NULL DEFAULT '0', `ut_to_amp` tinyint(1) NULL DEFAULT '0', `is_effective_set` tinyint(1) NULL DEFAULT '0', `effective_list_id` int NULL, `timestamp` bigint NOT NULL, PRIMARY KEY (`switch_multiple_id`)) ENGINE=InnoDB");
    await queryRunner.query("CREATE TABLE `SwitchTransfer` (`switch_transfer_id` int NOT NULL AUTO_INCREMENT, `switch_class` varchar(20) NOT NULL, `min_switch_out` decimal(20,2) NULL, `min_new_sales_fee_epf` decimal(20,2) NULL, `max_new_sales_fee_epf` decimal(20,2) NULL, `min_new_sales_fee_non_epf` decimal(20,2) NULL, `max_new_sales_fee_non_epf` decimal(20,2) NULL, `min_topup_epf` decimal(20,2) NULL, `max_topup_epf` decimal(20,2) NULL, `min_topup_non_epf` decimal(20,2) NULL, `max_topup_non_epf` decimal(20,2) NULL, `from_single` tinyint(1) NULL DEFAULT '0', `from_multiple` tinyint(1) NULL DEFAULT '0', `to_single` tinyint(1) NULL DEFAULT '0', `to_multiple` tinyint(1) NULL DEFAULT '0', `ut` tinyint(1) NULL DEFAULT '0', `prs` tinyint(1) NULL DEFAULT '0', `amp` tinyint(1) NULL DEFAULT '0', `amp_to_ut` tinyint(1) NULL DEFAULT '0', `ut_to_amp` tinyint(1) NULL DEFAULT '0', `timestamp` bigint NOT NULL, PRIMARY KEY (`switch_transfer_id`)) ENGINE=InnoDB");
    await queryRunner.query("CREATE TABLE `TomsUpdate` (`id` int NOT NULL AUTO_INCREMENT, `duration` int NOT NULL DEFAULT '0', `is_active` tinyint(1) NULL DEFAULT '1', `timestamp` bigint NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB");
    await queryRunner.query("CREATE TABLE `TransactionReason` (`reason_id` int NOT NULL AUTO_INCREMENT, `MANDT` varchar(10) NOT NULL, `source` varchar(10) NOT NULL, `action_type` varchar(10) NOT NULL, `transaction_type` varchar(20) NOT NULL, `sales_type` varchar(20) NULL, `category` varchar(100) NOT NULL, `sub_category` varchar(100) NULL, `timestamp` bigint NOT NULL, PRIMARY KEY (`reason_id`)) ENGINE=InnoDB");
    await queryRunner.query("CREATE TABLE `TransactionStatusList` (`MANDT` varchar(10) NOT NULL, `status_id` bigint NOT NULL AUTO_INCREMENT, `agent_status` varchar(100) NOT NULL, `branch_status` varchar(100) NOT NULL, `hq_status` varchar(100) NOT NULL, `timestamp` bigint NOT NULL, PRIMARY KEY (`status_id`)) ENGINE=InnoDB");
    await queryRunner.query("CREATE TABLE `TransferMultiple` (`transfer_multiple_id` int NOT NULL AUTO_INCREMENT, `fund_id` int NOT NULL, `from_single` tinyint(1) NULL DEFAULT '0', `from_multiple` tinyint(1) NULL DEFAULT '0', `to_single` tinyint(1) NULL DEFAULT '0', `to_multiple` tinyint(1) NULL DEFAULT '0', `is_effective_set` tinyint(1) NULL DEFAULT '0', `effective_list_id` int NULL, `timestamp` bigint NOT NULL, PRIMARY KEY (`transfer_multiple_id`)) ENGINE=InnoDB");
    await queryRunner.query("CREATE TABLE `UserGroup` (`user_group_id` int NOT NULL AUTO_INCREMENT, `name` varchar(30) NOT NULL, `description` varchar(100) NOT NULL, `access_level` varchar(15) NULL, `is_active` tinyint(1) NULL DEFAULT '0', `role_ids` json NULL, `branch_ids` json NULL, `permission` json NULL, `status` varchar(20) NOT NULL DEFAULT 'PENDING', `remarks` varchar(255) NULL, `author` binary(16) NULL, `request_approval_id` int NULL, `last_updated` bigint NULL, `timestamp` bigint NOT NULL, PRIMARY KEY (`user_group_id`)) ENGINE=InnoDB");
    await queryRunner.query("CREATE TABLE `UserRole` (`user_role_id` int NOT NULL AUTO_INCREMENT, `name` varchar(30) NOT NULL, `description` varchar(100) NOT NULL, `access_level` varchar(15) NULL, `is_active` tinyint(1) NULL DEFAULT '0', `permission` json NOT NULL, `status` varchar(45) NULL DEFAULT 'PENDING', `remarks` varchar(255) NULL, `author` binary(16) NULL, `request_approval_id` int NULL, `last_updated` bigint NULL, `timestamp` bigint NOT NULL, PRIMARY KEY (`user_role_id`)) ENGINE=InnoDB");
    await queryRunner.query("CREATE TABLE `Utmc` (`utmc_id` int NOT NULL AUTO_INCREMENT, `fund_holiday_id` int NULL, `name` varchar(100) NULL, `timestamp` bigint NOT NULL, PRIMARY KEY (`utmc_id`)) ENGINE=InnoDB");
    await queryRunner.query("CREATE TABLE `ReportDocuments` (`report_id` int NOT NULL AUTO_INCREMENT, `MANDT` varchar(10) NOT NULL DEFAULT 'KIB', `client_id` binary(16) NULL, `branch_id` int NULL, `filename` text NULL, `file_type` varchar(45) NULL, `path` text NULL, `report_type` varchar(45) NULL, `transaction_ref` varchar(45) NULL, `zip_name` varchar(255) NULL, `timestamp` bigint NOT NULL, PRIMARY KEY (`report_id`)) ENGINE=InnoDB");
    await queryRunner.query("CREATE TABLE `RequestApproval` (`id` int NOT NULL AUTO_INCREMENT, `MANDT` varchar(30) NOT NULL DEFAULT 'KIB', `value` json NULL, `fund_data` mediumtext NULL, `ref_id` json NULL, `source` varchar(50) NULL, `event_type` varchar(50) NULL, `status` varchar(20) NOT NULL DEFAULT 'PENDING', `file_path` text NULL, `remarks` varchar(255) NULL, `author` binary(16) NULL, `editor` binary(16) NULL, `last_updated` bigint NULL, `approver` binary(16) NULL, `timestamp` bigint NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB");
    await queryRunner.query("CREATE TABLE `SeenClick` (`seen_click_id` int NOT NULL AUTO_INCREMENT, `seen_by` varchar(50) NOT NULL, `reference_key` varchar(50) NULL, `location` json NOT NULL, `last_updated` bigint NULL, `timestamp` bigint NOT NULL, PRIMARY KEY (`seen_click_id`)) ENGINE=InnoDB");
    await queryRunner.query("CREATE TABLE `SeenDashboard` (`seen_dashboard_id` int NOT NULL AUTO_INCREMENT, `seen_by` varchar(255) NOT NULL, `location` json NOT NULL, `last_updated` bigint NULL, `timestamp` bigint NOT NULL, PRIMARY KEY (`seen_dashboard_id`)) ENGINE=InnoDB");
    await queryRunner.query("CREATE TABLE `SwitchFee` (`switch_fee_id` int NOT NULL AUTO_INCREMENT, `fund_id` int NOT NULL, `fee_type` varchar(20) NULL, `message` text NULL, `is_amp` tinyint(1) NULL DEFAULT '0', `charge_fee_id` int NOT NULL, `switch_settlement_id` int NULL, `is_effective_set` tinyint(1) NULL DEFAULT '0', `effective_list_id` int NULL, `timestamp` bigint NOT NULL, PRIMARY KEY (`switch_fee_id`)) ENGINE=InnoDB");
    await queryRunner.query("CREATE TABLE `SwitchSettlement` (`switch_settlement_id` int NOT NULL AUTO_INCREMENT, `switch_settlement_day` varchar(20) NULL, `cash_settlement_day` varchar(20) NULL, `local_settlement_day` varchar(20) NULL, `global_settlement_day` varchar(20) NULL, `amp_kib_settlement_day` varchar(20) NULL, `kgmaf_kib_settlement_day` varchar(20) NULL, `is_effective_set` tinyint(1) NULL DEFAULT '0', `effective_list_id` int NULL, `timestamp` bigint NOT NULL, PRIMARY KEY (`switch_settlement_id`)) ENGINE=InnoDB");
    await queryRunner.query("CREATE TABLE `TargetDateExtension` (`extension_id` int NOT NULL AUTO_INCREMENT, `MANDT` varchar(10) NOT NULL DEFAULT 'KIB', `order_no` varchar(45) NULL, `transaction_ref` varchar(45) NULL, `new_target_date` bigint NULL, `remarks` varchar(100) NULL, `old_status_id` int NULL, `requested_by` varchar(100) NULL, `user_id` binary(16) NOT NULL, `status` varchar(10) NULL DEFAULT 'Pending', `responded_on` bigint NULL, `timestamp` bigint NOT NULL, PRIMARY KEY (`extension_id`)) ENGINE=InnoDB");
    await queryRunner.query("CREATE TABLE `TransferFee` (`transfer_fee_id` int NOT NULL AUTO_INCREMENT, `fund_id` int NOT NULL, `min_redemption` text NULL, `charge_fee_id` int NOT NULL, `switch_check_id` int NOT NULL, `message` text NULL, `is_effective_set` tinyint(1) NULL DEFAULT '0', `effective_list_id` int NULL, `timestamp` bigint NOT NULL, PRIMARY KEY (`transfer_fee_id`)) ENGINE=InnoDB");
    await queryRunner.query("CREATE TABLE `UserGroupIdList` (`id` int NOT NULL AUTO_INCREMENT, `MANDT` varchar(30) NOT NULL DEFAULT 'KIB', `user_group_role_id` int NULL, `user_group_id` int NULL, `timestamp` bigint NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB");
    await queryRunner.query("ALTER TABLE `ClientAssessment` ADD CONSTRAINT `FK_9e6d44751031215c43039ae2e23` FOREIGN KEY (`client_id`) REFERENCES `Client`(`client_id`) ON DELETE RESTRICT ON UPDATE RESTRICT");
    await queryRunner.query("ALTER TABLE `FundTracker` ADD CONSTRAINT `FK_66a663df331c08a8c0f016ccf73` FOREIGN KEY (`investment_id`) REFERENCES `Investment`(`investment_id`) ON DELETE RESTRICT ON UPDATE RESTRICT");
    await queryRunner.query("ALTER TABLE `Investment` ADD CONSTRAINT `FK_e9f1de495fc04601028b81a6bf2` FOREIGN KEY (`client_id`) REFERENCES `Client`(`client_id`) ON DELETE RESTRICT ON UPDATE RESTRICT");
    await queryRunner.query("ALTER TABLE `Payment` ADD CONSTRAINT `FK_9c6d107c5e1ddb80e81b821b179` FOREIGN KEY (`agent_id`) REFERENCES `Agent`(`agent_id`) ON DELETE RESTRICT ON UPDATE RESTRICT");
    await queryRunner.query("ALTER TABLE `Payment` ADD CONSTRAINT `FK_823c82b9e2ce11ccad66e36b2ce` FOREIGN KEY (`doc_id`) REFERENCES `Document`(`document_id`) ON DELETE RESTRICT ON UPDATE RESTRICT");
    await queryRunner.query("ALTER TABLE `Document` ADD CONSTRAINT `FK_610236cf8c9a02e9d17f9f95029` FOREIGN KEY (`client_id`) REFERENCES `Client`(`client_id`) ON DELETE RESTRICT ON UPDATE RESTRICT");
    await queryRunner.query("ALTER TABLE `CaseTracker` ADD CONSTRAINT `FK_90c445a2765f361ee0cc39ad8e0` FOREIGN KEY (`case_id`) REFERENCES `EddCase`(`case_id`) ON DELETE RESTRICT ON UPDATE RESTRICT");
    await queryRunner.query("ALTER TABLE `OfficeUser` ADD CONSTRAINT `FK_3c6be3e17ee091aefcbf119d46e` FOREIGN KEY (`user_group_role_id`) REFERENCES `UserGroupRole`(`user_group_role_id`) ON DELETE RESTRICT ON UPDATE RESTRICT");
    await queryRunner.query("ALTER TABLE `UTAccount` ADD CONSTRAINT `FK_e6d3bf66e5a97fc5adac7f4ffb2` FOREIGN KEY (`joint_id`) REFERENCES `Client`(`client_id`) ON DELETE RESTRICT ON UPDATE RESTRICT");
    await queryRunner.query("ALTER TABLE `EddCase` ADD CONSTRAINT `FK_4ed223c8a4beb795e0b19dc185b` FOREIGN KEY (`amla_id`) REFERENCES `OfficeUser`(`user_id`) ON DELETE CASCADE ON UPDATE CASCADE");
    await queryRunner.query("ALTER TABLE `EddCase` ADD CONSTRAINT `FK_31382fce5e0b940da02602f453c` FOREIGN KEY (`client_id`) REFERENCES `Client`(`client_id`) ON DELETE RESTRICT ON UPDATE RESTRICT");
    await queryRunner.query("ALTER TABLE `EddCase` ADD CONSTRAINT `FK_cd3b4f4ea7bc0dea21c9dd28cea` FOREIGN KEY (`agent_id`) REFERENCES `Agent`(`agent_id`) ON DELETE RESTRICT ON UPDATE RESTRICT");
    await queryRunner.query("ALTER TABLE `EddCase` ADD CONSTRAINT `FK_0a8a3c2b9543efbb396f5e930e1` FOREIGN KEY (`edd_id`) REFERENCES `Edd`(`edd_id`) ON DELETE RESTRICT ON UPDATE RESTRICT");
    await queryRunner.query("ALTER TABLE `EddCase` ADD CONSTRAINT `FK_8f98dc8bf3579c4c1be800cb96d` FOREIGN KEY (`uta_id`) REFERENCES `UTAccount`(`uta_id`) ON DELETE RESTRICT ON UPDATE RESTRICT");
    await queryRunner.query("ALTER TABLE `Client` ADD CONSTRAINT `FK_54aea71963d14571999cfe0c9f1` FOREIGN KEY (`ref_id`) REFERENCES `Client`(`client_id`) ON DELETE RESTRICT ON UPDATE RESTRICT");
    await queryRunner.query("ALTER TABLE `Edd` ADD CONSTRAINT `FK_a0bbbc43b70b5b3120efb9d4287` FOREIGN KEY (`client_id`) REFERENCES `Client`(`client_id`) ON DELETE RESTRICT ON UPDATE RESTRICT");
    await queryRunner.query("ALTER TABLE `Edd` ADD CONSTRAINT `FK_95fb95debbf9a58635ad43ae164` FOREIGN KEY (`agent_id`) REFERENCES `Agent`(`agent_id`) ON DELETE RESTRICT ON UPDATE RESTRICT");
    await queryRunner.query("ALTER TABLE `Edd` ADD CONSTRAINT `FK_7a21ad29d65d05eb9e2e0a4451e` FOREIGN KEY (`uta_id`) REFERENCES `UTAccount`(`uta_id`) ON DELETE RESTRICT ON UPDATE RESTRICT");
    await queryRunner.query("ALTER TABLE `ModuleQuestion` ADD CONSTRAINT `FK_037a4d901b8cd5067bb1401d1b3` FOREIGN KEY (`question_id`) REFERENCES `Question`(`question_id`) ON DELETE RESTRICT ON UPDATE RESTRICT");
    await queryRunner.query("ALTER TABLE `ModuleQuestion` ADD CONSTRAINT `FK_a4c066f2a6fdf44dd02e6c0660b` FOREIGN KEY (`module_id`) REFERENCES `EddModule`(`module_id`) ON DELETE RESTRICT ON UPDATE RESTRICT");
    await queryRunner.query("ALTER TABLE `ModuleReason` ADD CONSTRAINT `FK_fa3cad0cd2a73b35cf1b940ddc8` FOREIGN KEY (`reason_id`) REFERENCES `EddReason`(`reason_id`) ON DELETE RESTRICT ON UPDATE RESTRICT");
    await queryRunner.query("ALTER TABLE `ModuleReason` ADD CONSTRAINT `FK_0169d301a545068bc54016bad34` FOREIGN KEY (`module_id`) REFERENCES `EddModule`(`module_id`) ON DELETE RESTRICT ON UPDATE RESTRICT");
    await queryRunner.query("ALTER TABLE `TargetDateExtension` ADD CONSTRAINT `FK_b9cbf50730543ec8590a2828815` FOREIGN KEY (`user_id`) REFERENCES `OfficeUser`(`user_id`) ON DELETE RESTRICT ON UPDATE RESTRICT");
}

    public async down(queryRunner: QueryRunner): Promise<void> {
    }

}
